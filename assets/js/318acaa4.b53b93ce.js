"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[61847],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?a.createElement(f,s(s({ref:t},c),{},{components:r})):a.createElement(f,s({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},61330:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={},s="Seed a Database",i={unversionedId:"how-to/seed",id:"version-0.0.21/how-to/seed",title:"Seed a Database",description:"A database is as useful as the data that it contains: a fresh, empty database",source:"@site/versioned_docs/version-0.0.21/how-to/seed.md",sourceDirName:"how-to",slug:"/how-to/seed",permalink:"/docs/0.0.21/how-to/seed",draft:!1,tags:[],version:"0.0.21",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deployment",permalink:"/docs/0.0.21/how-to/deployment"},next:{title:"GraphQL API",permalink:"/docs/0.0.21/reference/sql-graphql/intro"}},l={},p=[{value:"Example",id:"example",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"seed-a-database"},"Seed a Database"),(0,n.kt)("p",null,"A database is as useful as the data that it contains: a fresh, empty database\nisn't always the best starting point. We can add a few rows from our migrations\nusing SQL, but we might need to use JavaScript from time to time."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/docs/0.0.21/reference/cli#seed"},"platformatic db seed"),' command allows us to run a\nscript that will populate \u2014 or "seed" \u2014 our database.'),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("p",null,"Our seed script should export a ",(0,n.kt)("inlineCode",{parentName:"p"},"Function")," that accepts an argument:\nan instance of ",(0,n.kt)("a",{parentName:"p",href:"/docs/0.0.21/reference/sql-mapper/intro"},(0,n.kt)("inlineCode",{parentName:"a"},"@platformatic/sql-mapper")),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="seed.js"',title:'"seed.js"'},"'use strict'\n\nmodule.exports = async function ({ entities, db, sql }) {\n  await entities.graph.save({ input: { name: 'Hello' } })\n  await db.query(sql`\n    INSERT INTO graphs (name) VALUES ('Hello 2');\n  `)\n}\n")),(0,n.kt)("p",null,"We can then run the seed script with the Platformatic CLI:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npx platformatic db seed seed.js\n")))}u.isMDXComponent=!0}}]);