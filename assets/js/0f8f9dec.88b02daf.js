"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[74057],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=i,u=d["".concat(p,".").concat(f)]||d[f]||m[f]||r;return n?a.createElement(u,o(o({ref:t},s),{},{components:n})):a.createElement(u,o({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},55394:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={},o="Platformatic CLI",l={unversionedId:"reference/cli",id:"version-0.0.17/reference/cli",title:"Platformatic CLI",description:"The following is a list of all the help commands part of the Platformatic CLI.",source:"@site/versioned_docs/version-0.0.17/reference/cli.md",sourceDirName:"reference",slug:"/reference/cli",permalink:"/docs/0.0.17/reference/cli",draft:!1,tags:[],version:"0.0.17",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Relations",permalink:"/docs/0.0.17/reference/sql-mapper/entity/relations"},next:{title:"Configuration",permalink:"/docs/0.0.17/reference/configuration"}},p={},c=[{value:"Help",id:"help",level:2},{value:"DB",id:"db",level:2},{value:"help",id:"help-1",level:3},{value:"schema",id:"schema",level:3},{value:"seed",id:"seed",level:3},{value:"start",id:"start",level:3}],s={toc:c};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"platformatic-cli"},"Platformatic CLI"),(0,i.kt)("p",null,"The following is a list of all the help commands part of the Platformatic CLI."),(0,i.kt)("p",null,"You can install the CLI with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install -g platformatic")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn global add platformatic"),".\nYou can then run ",(0,i.kt)("inlineCode",{parentName:"p"},"platformatic")," to see the list of commands."),(0,i.kt)("h2",{id:"help"},"Help"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Welcome to Platformatic. Available commands are:\n\n* help - Display this message\n* help <command> - shows more information about a command.\n* db - start Platformatic DB; type `platformatic db help` to know more.\n\n")),(0,i.kt)("h2",{id:"db"},"DB"),(0,i.kt)("h3",{id:"help-1"},"help"),(0,i.kt)("p",null,"  Available commands:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"help")," - show this help message.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"help <command>")," - shows more information about a command.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"start")," - start the server.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"migrate")," - run migrations.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"seed")," - run a seed file."),(0,i.kt)("h3",{parentName:"li",id:"migrate"},"migrate"),(0,i.kt)("p",{parentName:"li"},"Apply all configurated migrations to the database:"),(0,i.kt)("p",{parentName:"li"},"$ platformatic db migrate"))),(0,i.kt)("p",null,"The migrations will be applied in the order they are specified in the\nfolder defined in the configuration file. If you want to apply a specific migration,\nyou can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"--to")," option:"),(0,i.kt)("p",null,"  $ platformatic db migrate --to 001"),(0,i.kt)("p",null,"Here is an example migration:"),(0,i.kt)("p",null,"  CREATE TABLE graphs (\nid SERIAL PRIMARY KEY,\nname TEXT\n);"),(0,i.kt)("p",null,"You can always rollback to a specific migration with:"),(0,i.kt)("p",null,"  $ platformatic db migrate --to VERSION"),(0,i.kt)("p",null,"Use 000 to reset to the initial state."),(0,i.kt)("p",null,"Options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c, --config <path>"),": Path to the configuration file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-t, --to <version>"),": Migrate to a specific version.")),(0,i.kt)("p",null,"If not specified, the configuration specified will be loaded from\n",(0,i.kt)("inlineCode",{parentName:"p"},"db.json"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"db.yml"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"db.tml")," in the current directory.\nYou can find more details about the configuration format at:\n",(0,i.kt)("a",{parentName:"p",href:"https://oss.platformatic.dev/docs/reference/configuration"},"https://oss.platformatic.dev/docs/reference/configuration"),"."),(0,i.kt)("h3",{id:"schema"},"schema"),(0,i.kt)("p",null,"  Generate a schema from the database and prints it to standard output:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"schema graphql")," - generate the GraphQL schema"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"schema openapi")," - generate the OpenAPI schema")),(0,i.kt)("p",null,"Options:"),(0,i.kt)("p",null,"  -c, --config FILE  Specify a configuration file to use"),(0,i.kt)("p",null,"If not specified, the configuration specified will be loaded from\n",(0,i.kt)("inlineCode",{parentName:"p"},"db.json"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"db.yml"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"db.tml")," in the current directory.\nYou can find more details about the configuration format at:\n",(0,i.kt)("a",{parentName:"p",href:"https://oss.platformatic.dev/docs/reference/configuration"},"https://oss.platformatic.dev/docs/reference/configuration"),"."),(0,i.kt)("h3",{id:"seed"},"seed"),(0,i.kt)("p",null,"  Load a seed into the database. This is a convenience method that loads\na JavaScript file and configure @platformatic/sql-mapper to connect to\nthe database specified in the configuration file."),(0,i.kt)("p",null,"Here is an example of a seed file:"),(0,i.kt)("p",null,"  'use strict'"),(0,i.kt)("p",null,"  module.exports = async function ({ entities, db, sql }) {\nawait entities.graph.save({ input: { name: 'Hello' } })\nawait db.query(sql",(0,i.kt)("inlineCode",{parentName:"p"},"      INSERT INTO graphs (name) VALUES ('Hello 2');\n   "),")\n}"),(0,i.kt)("p",null,"You can run this using the ",(0,i.kt)("inlineCode",{parentName:"p"},"seed")," command:"),(0,i.kt)("p",null,"  $ platformatic db seed seed.js"),(0,i.kt)("p",null,"Options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--config")," - Path to the configuration file.")),(0,i.kt)("p",null,"If not specified, the configuration specified will be loaded from\n",(0,i.kt)("inlineCode",{parentName:"p"},"db.json"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"db.yml"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"db.tml")," in the current directory.\nYou can find more details about the configuration format at:\n",(0,i.kt)("a",{parentName:"p",href:"https://oss.platformatic.dev/docs/reference/configuration"},"https://oss.platformatic.dev/docs/reference/configuration"),"."),(0,i.kt)("h3",{id:"start"},"start"),(0,i.kt)("p",null,"  Start the Platformatic DB server with the following command:"),(0,i.kt)("p",null," $ platformatic db start"),(0,i.kt)("p",null,"You will need a  configuration file. Here is an example to get you\nstarted, save the following as ",(0,i.kt)("inlineCode",{parentName:"p"},"db.json"),":"),(0,i.kt)("p",null,'  {\n"server": {\n"hostname": "127.0.0.1",\n"port": 0,\n"logger": {\n"level": "info"\n}\n},\n"core": {\n"connectionString": "sqlite://./db"\n},\n"migrations": {\n"dir": "./migrations"\n}\n}'),(0,i.kt)("p",null,"Remeber to create a migration, run the ",(0,i.kt)("inlineCode",{parentName:"p"},"db help migrate")," command\nto know more."),(0,i.kt)("p",null,"All outstanding migrations will be applied to the database\nunless the ",(0,i.kt)("inlineCode",{parentName:"p"},"migrations.autoApply")," configuration option is set to\nfalse."),(0,i.kt)("p",null,"By sending the SIGUSR2 signal, the server can be reloaded."),(0,i.kt)("p",null,"Options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c --config FILE"),"  Specify a configuration file to use"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-watch-ignore=FILE1,FILE2"),"  Specify which files should not be watched (and cause server restart)")),(0,i.kt)("p",null,"If not specified, the configuration specified will be loaded from\n",(0,i.kt)("inlineCode",{parentName:"p"},"db.json"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"db.yml"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"db.tml")," in the current directory.\nYou can find more details about the configuration format at:\n",(0,i.kt)("a",{parentName:"p",href:"https://oss.platformatic.dev/docs/reference/configuration"},"https://oss.platformatic.dev/docs/reference/configuration"),"."))}m.isMDXComponent=!0}}]);